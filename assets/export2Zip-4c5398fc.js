import{L as w,M as m,N as g,S as _,O as A,P as v}from"./index-0b6b4772.js";function E(s,l,e,t="excel-list",o="xlsx"){const n=document.getElementById(s),a=T(n,l,e),h="SheetJS",r=x,c=b(a);r.SheetNames.push(h),r.Sheets[h]=c;const u=w(r,{bookType:o,bookSST:!1,type:"binary"});m.saveAs(new Blob([y(u)],{type:"application/octet-stream"}),`${t}.${o}`)}function d({multiHeader:s=[],header:l={},data:e=[],filename:t="excel-list",merges:o=[],autoWidth:n=!0,bookType:a="xlsx"}){e=[...e],e.unshift(l);for(let i=s.length-1;i>-1;i--)e.unshift(s[i]);const h="SheetJS",r=x,c=b(e);if(o.length>0&&(c["!merges"]||(c["!merges"]=[]),o.forEach(i=>{c["!merges"].push(g.decode_range(i))})),n){const i=e.map(S=>S.map(f=>f==null?{wch:10}:f.toString().charCodeAt(0)>255?{wch:f.toString().length*2}:{wch:f.toString().length}));let p=i[0];for(let S=1;S<i.length;S++)for(let f=0;f<i[S].length;f++)p[f].wch<i[S][f].wch&&(p[f].wch=i[S][f].wch);c["!cols"]=p}r.SheetNames.push(h),r.Sheets[h]=c;const u=w(r,{bookType:a,bookSST:!1,type:"binary"});m.saveAs(new Blob([y(u)],{type:"application/octet-stream"}),`${t}.${a}`)}function T(s,l=0,e){const t=[],o=s.querySelectorAll("tr");for(let n=0;n<o.length;++n){const a=[],h=o[n];let r=h.querySelectorAll("td");r&&r.length>0||(r=h.querySelectorAll("th"));let c=e&&e+1||r.length;for(let u=l;u<c;++u){let p=r[u].innerText;p!==""&&(p=+p),a.push(p!==""?p:null)}t.push(a)}return t}function $(s){return(Date.parse(s.toUTCString())-new Date(Date.UTC(1899,11,30)).getTime())/(24*60*60*1e3)}function b(s){const l={},e={s:{c:1e7,r:1e7},e:{c:0,r:0}};for(let t=0;t!=s.length;++t)for(let o=0;o!=s[t].length;++o){e.s.r>t&&(e.s.r=t),e.s.c>o&&(e.s.c=o),e.e.r<t&&(e.e.r=t),e.e.c<o&&(e.e.c=o);const n={v:s[t][o]};if(n.v==null)continue;const a=g.encode_cell({c:o,r:t});typeof n.v=="number"?n.t="n":typeof n.v=="boolean"?n.t="b":n.v instanceof Date?(n.t="n",n.z=_._table[14],n.v=$(n.v)):n.t="s",l[a]=n}return e.s.c<1e7&&(l["!ref"]=g.encode_range(e)),l}const x={SheetNames:[],Sheets:{}};function y(s){const l=new ArrayBuffer(s.length),e=new Uint8Array(l);for(let t=0;t!=s.length;++t)e[t]=s.charCodeAt(t)&255;return l}function D(s,l,e,t){const o=new A,n=e||"file",a=t||"file",h=l;let r=`${s}\r
`;h.forEach(c=>{let u="";u=c.toString(),r+=`${u}\r
`}),o.file(`${n}.txt`,r),o.generateAsync({type:"blob"}).then(c=>{v.saveAs(c,`${a}.zip`)},()=>{alert("导出失败")})}export{D as a,E as b,d as e};
