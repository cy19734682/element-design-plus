declare const _default: import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    initData?: boolean | undefined;
    isTable?: boolean | undefined;
    url?: string | undefined;
    searchData?: Record<string, any> | undefined;
    columns?: any[] | undefined;
    data?: any[] | undefined;
    tableAlign?: string | undefined;
    showOverflowTooltip?: boolean | undefined;
    tableEmptyTdHandle?: boolean | undefined;
    selection?: boolean | undefined;
    radio?: boolean | undefined;
    loading?: boolean | undefined;
    defaultId?: string | undefined;
    orderKey?: string | undefined;
    orderDefault?: "desc" | "asc" | undefined;
    showPage?: boolean | undefined;
    pageLayout?: string | undefined;
    pageSize?: number | undefined;
    pageSizes?: number[] | undefined;
    currentPageKey?: string | undefined;
    pageSizeKey?: string | undefined;
    totalKey?: string | undefined;
    rowGutter?: number | undefined;
    rowJustify?: "center" | "end" | "start" | "space-around" | "space-between" | "space-evenly" | undefined;
    rowAlign?: "top" | "bottom" | "middle" | undefined;
    rowSpan?: number | undefined;
    rowBorderColor?: string | undefined;
}>, {
    initData: boolean;
    isTable: boolean;
    searchData: () => {};
    columns: () => never[];
    data: () => never[];
    tableAlign: string;
    showOverflowTooltip: boolean;
    tableEmptyTdHandle: boolean;
    selection: boolean;
    radio: boolean;
    loading: boolean;
    defaultId: string;
    orderKey: string;
    orderDefault: string;
    showPage: boolean;
    pageLayout: string;
    pageSize: number;
    pageSizes: () => number[];
    currentPageKey: string;
    pageSizeKey: string;
    totalKey: string;
    rowGutter: number;
    rowJustify: string;
    rowSpan: number;
    rowBorderColor: string;
}>, {
    dataT: globalThis.Ref<any[]>;
    dataS: globalThis.WritableComputedRef<{
        [p: string]: any;
        rowKey: string;
    }[]>;
    selectedIds: globalThis.ComputedRef<any[]>;
    handleRowClick: (row: Record<string, any>, index?: number | undefined) => void;
    getDataAndClickRow: (val: string) => void;
    handleClearSelection: () => void;
    clearTableData: () => void;
    getTableData: (keepSelect?: boolean) => Promise<void>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "on-data-change"[], "on-data-change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<globalThis.ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    initData?: boolean | undefined;
    isTable?: boolean | undefined;
    url?: string | undefined;
    searchData?: Record<string, any> | undefined;
    columns?: any[] | undefined;
    data?: any[] | undefined;
    tableAlign?: string | undefined;
    showOverflowTooltip?: boolean | undefined;
    tableEmptyTdHandle?: boolean | undefined;
    selection?: boolean | undefined;
    radio?: boolean | undefined;
    loading?: boolean | undefined;
    defaultId?: string | undefined;
    orderKey?: string | undefined;
    orderDefault?: "desc" | "asc" | undefined;
    showPage?: boolean | undefined;
    pageLayout?: string | undefined;
    pageSize?: number | undefined;
    pageSizes?: number[] | undefined;
    currentPageKey?: string | undefined;
    pageSizeKey?: string | undefined;
    totalKey?: string | undefined;
    rowGutter?: number | undefined;
    rowJustify?: "center" | "end" | "start" | "space-around" | "space-between" | "space-evenly" | undefined;
    rowAlign?: "top" | "bottom" | "middle" | undefined;
    rowSpan?: number | undefined;
    rowBorderColor?: string | undefined;
}>, {
    initData: boolean;
    isTable: boolean;
    searchData: () => {};
    columns: () => never[];
    data: () => never[];
    tableAlign: string;
    showOverflowTooltip: boolean;
    tableEmptyTdHandle: boolean;
    selection: boolean;
    radio: boolean;
    loading: boolean;
    defaultId: string;
    orderKey: string;
    orderDefault: string;
    showPage: boolean;
    pageLayout: string;
    pageSize: number;
    pageSizes: () => number[];
    currentPageKey: string;
    pageSizeKey: string;
    totalKey: string;
    rowGutter: number;
    rowJustify: string;
    rowSpan: number;
    rowBorderColor: string;
}>>> & {
    "onOn-data-change"?: ((...args: any[]) => any) | undefined;
}, {
    data: any[];
    columns: any[];
    showOverflowTooltip: boolean;
    pageSize: number;
    loading: boolean;
    radio: boolean;
    initData: boolean;
    isTable: boolean;
    searchData: Record<string, any>;
    tableAlign: string;
    tableEmptyTdHandle: boolean;
    selection: boolean;
    defaultId: string;
    orderKey: string;
    orderDefault: "desc" | "asc";
    showPage: boolean;
    pageLayout: string;
    pageSizes: number[];
    currentPageKey: string;
    pageSizeKey: string;
    totalKey: string;
    rowGutter: number;
    rowJustify: "center" | "end" | "start" | "space-around" | "space-between" | "space-evenly";
    rowSpan: number;
    rowBorderColor: string;
}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
